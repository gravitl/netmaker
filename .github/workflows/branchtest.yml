name: Deploy and Test Branch

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to deploy and test'
        required: true
        default: 'develop'
  pull_request:
      types: [opened, synchronize, reopened]
      branches: [develop]

jobs:
  skip-check:
    runs-on: ubuntu-latest
    outputs:
      skip: ${{ steps.skip.outputs.skip }}
    steps:
      - id: skip
        uses: fkirc/skip-duplicate-actions@v5
        with:
          concurrent_skipping: 'always'
  
  getbranch:
    runs-on: ubuntu-latest
    needs: skip-check
    if: ${{ needs.skip-check.outputs.skip != 'true' }}
    outputs:
      netclientbranch: ${{ steps.getbranch.outputs.netclientbranch }}
      netmakerbranch: ${{ steps.getbranch.outputs.netmakerbranch }}
    steps:
      - name: Determine branches
        id: determine_branches
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "NETMAKER_BRANCH=${{ github.event.inputs.branch }}" >> $GITHUB_ENV
            echo "NETCLIENT_BRANCH=${{ github.event.inputs.branch }}" >> $GITHUB_ENV
          else
            echo "NETMAKER_BRANCH=${{ github.head_ref }}" >> $GITHUB_ENV
            echo "NETCLIENT_BRANCH=develop" >> $GITHUB_ENV
          fi
      - name: Checkout netclient repository
        uses: actions/checkout@v5
        with:
          repository: gravitl/netclient
          fetch-depth: 0
      - name: Check if netclient branch exists and set output
        id: getbranch 
        run: |
          if git ls-remote --heads origin ${{ env.NETCLIENT_BRANCH }} | grep -q ${{ env.NETCLIENT_BRANCH }}; then
            echo "netclient branch ${{ env.NETCLIENT_BRANCH }} exists"
            echo "netclientbranch=${{ env.NETCLIENT_BRANCH }}" >> $GITHUB_OUTPUT
          else
            echo "netclient branch ${{ env.NETCLIENT_BRANCH }} does not exist, using develop"
            echo "netclientbranch=develop" >> $GITHUB_OUTPUT
          fi
          echo "netmakerbranch=${{ env.NETMAKER_BRANCH }}" >> $GITHUB_OUTPUT

  branchtest:
    uses: gravitl/devops/.github/workflows/testdeploybranch.yml@master
    needs: [getbranch, skip-check]
    with:
      netclientbranch: ${{ needs.getbranch.outputs.netclientbranch }}
      netmakerbranch: ${{ needs.getbranch.outputs.netmakerbranch }}
      tag: ${{ github.run_id }}-${{ github.run_attempt }}
    secrets: inherit
